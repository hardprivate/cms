<?php
/*
Вид — используется для задания внешнего отображения данных, полученных из контроллера и модели.
 Виды cодержат HTML-разметку и небольшие вставки PHP-кода для обхода, форматирования и отображения данных.
 Не должны напрямую обращаться к базе данных. Этим должны заниматься модели.
 Не должны работать с данными, полученными из запроса пользователя. Эту задачу должен выполнять контроллер.
 Может напрямую обращаться к свойствам и методам контроллера или моделей, для получения готовых к выводу данных.
 Виды обычно разделяют на общий шаблон, содержащий разметку, общую для всех страниц (например, шапку и подвал) и части шаблона, которые используют для отображения данных выводимых из модели или отображения форм ввода данных.
*/
class View
{
	//public $template_view; // здесь можно указать общий вид по умолчанию.
	
	function generate($content_view, $template_view, $data = null)
	{
		/*
		if(is_array($data)) {
			// преобразуем элементы массива в переменные
			extract($data);
		}
		*/
		
		//header('Content-Type: text/html; charset=utf-8');
		require_once('application/views/'.$template_view);
	}
}

/*
Не трудно догадаться, что метод generate предназначен для формирования вида. В него передаются следующие параметры:
$content_file — виды отображающие контент страниц;
$template_file — общий для всех страниц шаблон;
$data — массив, содержащий элементы контента страницы. Обычно заполняется в модели.

 Функцией include динамически подключается общий шаблон (вид), внутри которого будет встраиваться вид
 для отображения контента конкретной страницы.

 В нашем случае общий шаблон будет содержать header, menu, sidebar и footer, а контент страниц будет содержаться в отдельном виде. Опять же это сделано для упрощения.
*/
?>